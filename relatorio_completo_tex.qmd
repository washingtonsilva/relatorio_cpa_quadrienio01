---
lang: pt
format:
  pdf:
    include-before-body:
      - file: pre_textuais.tex
    include-in-header:
      - text: |
          \usepackage{indentfirst}
          \usepackage{microtype}
          \usepackage{float}
          \usepackage{caption}
          \captionsetup[figure]{justification=raggedright, singlelinecheck=false}
          \usepackage{xcolor}
          \usepackage{tikz}
    documentclass: report
    papersize: a4
    geometry:
      - top = 3cm
      - bottom = 2cm
      - left = 3cm
      - right = 2cm
    fontsize: 12pt
    linestretch: 1.25
    indent: true
    toc: true
    toc-title: Sumário
    toc-depth: 3
    number-sections: true
    fig-cap-location: bottom
    fig-dpi: 300
    fig-pos: "H"
    fig-align: "center"
    tbl-cap-location: top
    tbl-pos: "H" 
    tbl-align: "center" 
    lof: true
    lot: true
    link-citations: true
execute: 
  echo: false
  warning: false
  message: false
crossref:
  fig-prefix: 'Fig.'
  tbl-prefix: 'Tab.'
bibliography: referencias.bibtex
csl: associacao-brasileira-de-normas-tecnicas-ipea.csl
editor: source
---


```{r}
#| label: setup 
#| echo: false

# pacotes necessarios
library(here)       # para usar caminhos relativos 
library(tidyverse)  # para usar readr, dplyr, ggplot2...
library(scales)     # para anotações em gráficos
library(ggthemes)   # temas para ggplot2
library(kableExtra) # para criar tabelas
library(gt)

# importa os arquivos de dados

## discentes
path_discentes <- here::here("dados/limpos/dados_discentes.rds")
dados_discentes <- readr::read_rds(path_discentes)

## docentes
path_docentes <- here::here("dados/limpos/dados_docentes.rds")
dados_docentes <- readr::read_rds(path_docentes)
```




# Introdução 





# Planejamento da Autoavaliação

O Programa de Pós-Graduação em Administração do IFMG - Campus Formiga 
iniciou suas atividades em 2021, durante um período crítico marcado pela 
pandemia da COVID-19. Esse contexto desafiador exigiu adaptações rápidas 
e estratégicas para assegurar a qualidade acadêmica e administrativa 
desde os primeiros passos do programa.

Desde sua concepção, o Mestrado Profissional em Administração demonstrou 
um compromisso sólido com a melhoria contínua. Reconhecendo 
os desafios inerentes à estruturação de um programa recém-criado, a 
Comissão Própria de Avaliação empreendeu esforços significativos 
para desenvolver um planejamento correto de autoavaliação. Este 
planejamento visou estabelecer uma política alinhada ao estágio 
inicial de maturidade do programa e às diretrizes da CAPES, objetivando 
a produção de resultados concretos para o aprimoramento do programa.

A Política de Autoavaliação do Programa foi elaborada ao longo do 
quadriênio 2021-2024 e formalizada pela Portaria Nº 1706/IFMG, de 29 de 
novembro de 2024 [@portaria1706ifmg]. Deve-se destacar que versões 
preliminares dessa política já orientavam as ações desde os 
primeiros anos, servindo como base para o planejamento das 
atividades avaliativas.

O planejamento da autoavaliação foi estruturado conforme as seguintes etapas:

- **Definição de objetivos claros:** Estabelecer metas alinhadas à 
missão do programa e às expectativas dos seus diversos públicos.

- **Benchmarking:** Realizar pesquisas sobre políticas e instrumentos 
utilizados por programas de referência.

- **Desenvolvimento metodológico:** Criar instrumentos avaliativos 
adequados ao contexto do programa.

- **Sensibilização da comunidade acadêmica:** Promover o engajamento 
ativo dos diferentes segmentos no processo avaliativo.

- **Cronograma detalhado:** Planejar as ações avaliativas com prazos 
definidos para cada etapa.

O cronograma exibido na Tab. 2.1 sintetiza as principais ações planejadas e 
executadas pela Comissão Própria de Avaliação (CPA) ao longo do quadriênio:

```{r}
#| tbl-cap: "Cronograma de Ações para a Autoavaliação"

tabela_planejamento <- data.frame(
  Periodo = c(
    "2021/2022",
    "2021/2022",
    "2021/2022",
    "2021/2022",
    "2021/2022",
    "2023/2024",
    "2024",
    "2024/2025",
    "2025",
    "2025"
  ),
  Acao = c(
    "Pesquisas para a construção da política de autoavaliação",
    "Elaboração das primeiras versões da política de autoavaliação",
    "Pesquisas sobre instrumentos utilizados por cursos de referência",
    "Construção, revisão e aplicação das primeiras versões dos instrumentos de pesquisa",
    "Início do trabalho de sensibilização dos segmentos acadêmicos",
    "Aplicação dos instrumentos, organização e análise dos dados",
    "Formalização da política de autoavaliação do programa",
    "Compilação, organização, análise e construção do relatório integral com os resultados obtidos ao longo do quadriênio",
    "Workshop para discussão e recebimento de sugestões para o relatório integral de autoavaliação",
    "Meta-Avaliação"
  ),
  Responsavel = c(
    "CPA",
    "CPA",
    "CPA",
    "CPA",
    "CPA",
    "CPA",
    "CPA",
    "CPA",
    "CPA",
    "CPA"
  ),
  Objetivo = c(
    "Estabelecer benchmarks e definir diretrizes iniciais para a política de autoavaliação.",
    "Definir os objetivos e a estrutura da política de autoavaliação.",
    "Identificar boas práticas por meio de benchmarks para instrumentos avaliativos.",
    "Coletar dados iniciais que subsidiem a construção da política de autoavaliação.",
    "Engajar docentes, discentes e técnicos administrativos no processo avaliativo.",
    "Avaliar a qualidade do ensino, pesquisa e extensão, consolidando dados para melhorias.",
    "Consolidar formalmente a política de autoavaliação do programa.",
    "Documentar os resultados obtidos ao longo do quadriênio e propor recomendações.",
    "Discutir e coletar sugestões dos segmentos acadêmicos para o relatório integral e para a meta-avaliação.",
    "Refletir criticamente sobre o processo realizado no quadriênio, identificando melhorias."
  )
)

tabela_planejamento |>
  kbl(
    col.names = c(
      "\\textbf{Período}",
      "\\textbf{Ação}",
      "\\textbf{Responsável}",
      "\\textbf{Objetivo}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'l', 'c', 'l'),
    longtable = FALSE
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped", "repeat_header"),
    stripe_color = "gray!10",
    font_size = 9
  ) |>
  column_spec(2, width = "5cm") |>
  column_spec(4, width = "5cm") |>
  footnote(
    general = "Fonte: Comissão Própria de Avaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```

A Política de Autoavaliação consolidou-se como um instrumento essencial 
para garantir a qualidade acadêmica e administrativa do programa. Além 
disso, fomentou uma cultura institucional voltada à reflexão crítica e 
ao aperfeiçoamento contínuo. Este compromisso é evidenciado pelos 
resultados obtidos ao longo dos anos e pelo engajamento crescente 
da comunidade acadêmica.





# Metodologia

A metodologia aplicada na autoavaliação do Mestrado Profissional em 
Administração do IFMG - Campus Formiga foi desenvolvida em conformidade 
com a Política de Autoavaliação do Programa, formalizada pela 
Portaria IFMG nº 1706/2024 [@portaria1706ifmg]. Este capítulo descreve 
os procedimentos adotados para a coleta e análise dos dados, os instrumentos 
utilizados e as técnicas empregadas no processo autoavaliativo.


## Metodologia Aplicada ao Processo de Autoavaliação

O processo de autoavaliação foi estruturado com o objetivo de contribuir 
para uma reflexão crítica que objetive a melhoria contínua do programa. Para 
isso, foram seguidas etapas que buscaram o alinhamento às diretrizes da CAPES 
e à Política de Autoavaliação do Programa. As principais etapas incluiram:

1. **Planejamento**: Revisão das diretrizes normativas da CAPES e da 
política institucional, seguido pela definição dos critérios avaliativos, 
abrangendo ensino, pesquisa, extensão e gestão acadêmica.

2. **Engajamento da Comunidade Acadêmica**: Incentivo à participação ativa 
de discentes e docentes por meio de campanhas informativas.

3. **Execução da Autoavaliação**: Condução anual do processo pela 
Comissão Própria de Autoavaliação (CPA), composta por representantes 
dos diferentes segmentos da comunidade acadêmica do Programa.

4. **Meta-avaliação**: Revisão crítica dos métodos aplicados para aprimorar 
continuamente o processo.

A metodologia adotada priorizou a transparência e a inclusão, assegurando 
que todos os envolvidos no programa pudessem contribuir com percepções e 
sugestões para o aperfeiçoamento contínuo do programa.


## Instrumentos

Os instrumentos utilizados para a coleta de dados foram elaborados com 
base em boas práticas avaliativas e adaptados ao estágio de maturidade 
e às especificidades do programa. Os principais instrumentos foram 
questionários estruturados, aplicados tanto aos discentes quanto aos 
docentes. Esses questionários abordaram dimensões essenciais para a análise 
do curso, tais como:

- Qualidade do ensino ofertado;
- Percepções sobre a coordenação do curso;
- Infraestrutura disponível;
- Disciplinas obrigatórias e optativas;
- Atendimento administrativo;
- Interdisciplinaridade e internacionalização;
- Sugestões de melhorias.

As questões foram organizadas em dois formatos principais:

1. **Quantitativo**: Utilização de escalas (por exemplo, Likert) para medir 
percepções sobre diferentes aspectos.

2. **Qualitativo**: Respostas abertas que permitiram aos participantes 
expressar opiniões detalhadas.



## Técnicas Utilizadas para Análise dos Dados

A análise dos dados coletados foi realizada utilizando uma abordagem mista, 
combinando métodos quantitativos e qualitativos:

1. **Análise Estatística Descritiva**:

- Os dados quantitativos foram sintetizados por meio de métricas como 
médias, frequências relativas e percentuais.

- Essa abordagem permitiu identificar padrões significativos nos dados coletados.

2. **Análise de Conteúdo**:

- As respostas qualitativas foram examinadas com base em técnicas de 
categorização temática.

- Essa análise possibilitou compreender adequadamente as percepções 
e sugestõesdos participantes e identificar áreas prioritárias que podem ser 
aperfeiçoadas.

3. **Consolidação dos Resultados**:

- Os achados foram consolidados neste relatório que destaca os 
pontos fortes, as oportunidades de melhoria e as recomendações para 
ações futuras.

- Esse relatório foi apresentados à comunidade acadêmica em um
workshop, que fo um importante espaço para a reflexão coletiva 
para evolução do programa.

4. **Meta-avaliação**:

- Consistiu na avaliação crítica dos instrumentos utilizados (questionários) 
e das metodologias aplicadas.

- O objetivo foi garantir que os métodos empregados fossem válidos, 
confiáveis e úteis para o aprimoramento contínuo do programa.

Os resultados obtidos ao longo do quadriênio 2021/2024 foram amplamente 
discutidos pela CPA em reuniões internas e apresentados à comunidade 
acadêmica em reuniões e no workshop final. Essas discussões 
viabilizaram o planejamento conjunto das ações futuras voltadas 
à evolução do programa.





# Resultados da Autoavaliação 

## Corpo Discente


### Taxas de Resposta

```{r}
#| tbl-cap: "Taxas de Resposta dos Discentes por Ano/Turma de Ingresso e Total."

dados_taxa <- tibble(
  Turma = c("2021", "2022", "2023", "2024", "Total"),
  Respondentes = c(2, 2, 5, 3, 12),
  Total_Alunos = c(9, 4, 5, 7, 25),
  Taxa_Resposta = c(0.22, 0.50, 1.00, 0.43, 0.48)
)

dados_taxa |>
  mutate(Taxa_Resposta = paste0(round(Taxa_Resposta * 100, 0), "\\%")) |>
  kbl(
    col.names = c(
      "\\textbf{Ano de Ingresso}", 
      "\\textbf{Respondentes}", 
      "\\textbf{Total}", 
      "\\textbf{Taxa de Resposta}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'c', 'c', 'c')
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped"),
    stripe_color = "white!20"
  ) |>
  row_spec(5, background = "lightblue") |>
  footnote(
    general = "Fonte: Comissão Própria de Avaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```



### Características dos Discentes


```{r}
#| tbl-cap: "Estatísticas das idades (em anos) dos participantes da pesquisa."

# Criar tabela de estatísticas descritivas
dados_discentes %>%
  summarise(
    `Idade média` = mean(q3),
    `Idade mediana` = median(q3),
    `Idade mínima` = min(q3),
    `1º Quartil` = quantile(q3, 0.25),
    `3º Quartil` = quantile(q3, 0.75),
    `Idade máxima` = max(q3),
    `Desvio padrão` = sd(q3)
  ) %>%
  t() %>%
  as.data.frame() %>%
  kbl(
    col.names = c("\\textbf{Estatística}", "\\textbf{Estimativa}"),
    digits = 1,
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    linesep = "",
    align = c("l", "c")
  ) %>%
  kable_styling(
    latex_options = c("hover", "hold_position"),
    stripe_color = "gray!20",
    full_width = FALSE,
    position = "center",
    bootstrap_options = "striped"
  ) %>%
  column_spec(1, width = "4cm") %>%
  column_spec(2, width = "3cm") %>%
  footnote(
    general = "Fonte: Comissão Própria de Avaliação.",
    general_title = "",
    footnote_as_chunk = TRUE,
    threeparttable = TRUE
  )
```



```{r}
#| label: fig-4.1
#| fig-cap: "Proporção de discentes que exercem atividade profissional remunerada."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência para atividade profissional
ativ_tab <- dados_discentes %>%
  count(q5) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q5, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q5)) +
  geom_rect(color = "white") +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você exerce alguma atividade profissional remunerada?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```




```{r}
#| label: fig-4.2
#| fig-cap: "Atividades remuneradas exercidas pelos participantes da pesquisa."
#| fig-width: 8  # Reduzindo a largura do gráfico
#| fig-height: 5 # Reduzindo a altura do gráfico

# Pré-processamento dos dados
dados_discentes <- dados_discentes %>%
  mutate(q6 = factor(
    case_when(
      q6 == "Não tenho no momento." ~ NA_character_,
      q6 %in% c("Professor", "Professora universitária") ~ "Professor(a)",
      q6 %in% c(
        "Funcionário Público - Agento de Correios",
        "Servidor Público",
        "Servidora Pública"
      ) ~ "Servidor(a) Público(a)",
      TRUE ~ as.character(q6)
    )
  ))

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  filter(!is.na(q6)) %>%
  count(q6, sort = TRUE) %>%
  mutate(q6 = fct_rev(fct_inorder(q6))) %>%
  mutate(perc = n / sum(n))

# Define cores manualmente para cada resposta
cores <- c(
  "Contador" = "#E69F00",
  "Professor(a)" = "#E69F00",
  "Servidor(a) Público(a)" = "#E69F00",
  "Gerente de Relacionamento" = "#999999",
  "Supervisor de Suprimentos" = "#999999",
  "Instrutora de formação profissional" = "#999999"
)

# Cria gráfico lollipop
ggplot(ativ_tab, aes(x = perc, y = q6)) +
  geom_segment(aes(
    x = 0,
    xend = perc,
    y = q6,
    yend = q6,
    color = q6
  ), linewidth = 1.2) +  # altera a espessura da linha
  geom_point(aes(color = q6), size = 5) +  # altera o tamanho dos pontos
  geom_text(
    aes(label = scales::percent(perc, accuracy = 0.1)),
    vjust = -1,  # ajusta a posição vertical do texto
    hjust = -0.2,
    size = 4,  # ajusta o tamanho da fonte do texto
    fontface = "bold"
  ) +
  scale_color_manual(values = cores) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.1)),  # ajusta a expansão do eixo X
    limits = c(0, 0.8),
    labels = scales::label_percent()
  ) +
  labs(
    title = "Em caso de possuir atividade profissional, por favor especifique qual.",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = "Porcentagem de participantes",
    y = NULL
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    # Reduzindo o tamanho da fonte do título
    plot.title = element_text(size = 12, face = "bold", hjust = 0.8),  
    plot.subtitle = element_text(size = 8),
    # Reduzindo o tamanho da fonte do eixo Y
    axis.text.y = element_text(size = 10, face = "bold"),  
    # Reduzindo o tamanho da fonte do eixo X
    axis.text.x = element_text(size = 10),  
    # Reduzindo a espessura da linha do eixo Y
    axis.line.y = element_line(color = "grey80", linewidth = .3), 
    # Reduzindo a espessura dos ticks do eixo Y
    axis.ticks.y = element_line(color = "grey80", linewidth = .3),  
    # Reduzindo a espessura da linha do eixo X
    axis.line.x = element_line(color = "grey80", linewidth = .3),  
    # Reduzindo a espessura dos ticks do eixo X
    axis.ticks.x = element_line(color = "grey80", linewidth = .3),  
    axis.title.y = element_blank(),
    # Reduzindo o tamanho da fonte da legenda
    plot.caption = element_text(size = 9),  
    # Reduzindo as margens do gráfico
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10, unit = "pt")  
  )
```



### Avaliação do Programa


```{r}
#| label: fig-4.3
#| fig-cap: "Avaliação discente da interdisciplinaridade no Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q7_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q7, incluindo níveis não utilizados
q7_summary <- dados_discentes %>%
  count(q7, sort = TRUE) %>%
  complete(q7 = q7_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q7 = factor(q7, levels = q7_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q7_summary_diverging <- q7_summary %>%
  mutate(percent_answers = if_else(
    q7 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q7_summary_diverging, aes(x = q7, y = percent_answers, fill = q7)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q7_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso utiliza ações de promoção da interdisciplinaridade?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.4
#| fig-cap: "Avaliação discente da internacionalização do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q8_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q8, incluindo níveis não utilizados
q8_summary <- dados_discentes %>%
  count(q8, sort = TRUE) %>%
  complete(q8 = q8_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q8 = factor(q8, levels = q8_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q8_summary_diverging <- q8_summary %>%
  mutate(percent_answers = if_else(
    q8 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q8_summary_diverging, aes(x = q8, y = percent_answers, fill = q8)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q8_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso emprega ações de promoção da internacionalização?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.5
#| fig-cap: "Avaliação discente das atividades de extensão."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q9_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q9, incluindo níveis não utilizados
q9_summary <- dados_discentes %>%
  count(q9, sort = TRUE) %>%
  complete(q9 = q9_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q9 = factor(q9, levels = q9_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q9_summary_diverging <- q9_summary %>%
  mutate(percent_answers = if_else(
    q9 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q9_summary_diverging, aes(x = q9, y = percent_answers, fill = q9)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q9_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades de extensão como cursos, projetos de extensão e\noutras ações e/ou integra-se à atividades extensionistas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.6
#| fig-cap: "Avaliação discente das atividades extraclasse."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q10_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q10, incluindo níveis não utilizados
q10_summary <- dados_discentes %>%
  count(q10, sort = TRUE) %>%
  complete(q10 = q10_levels, fill = list(n = 0)) %>%
  mutate(q10 = factor(q10, levels = q10_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q10_summary_diverging <- q10_summary %>%
  mutate(percent_answers = if_else(
    q10 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q10_summary_diverging, aes(x = q10, y = percent_answers, fill = q10)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q10_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades extraclasse como seminários, palestras,\ngrupos de estudos, dentre outros?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.7
#| fig-cap: "Percepção discente sobre o ambiente criado pelo curso para seu crescimento intelectual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q11_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q11, incluindo níveis não utilizados
q11_summary <- dados_discentes %>%
  count(q11, sort = TRUE) %>%
  complete(q11 = q11_levels, fill = list(n = 0)) %>%
  mutate(q11 = factor(q11, levels = q11_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q11_summary_diverging <- q11_summary %>%
  mutate(percent_answers = if_else(
    q11 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q11_summary_diverging, aes(x = q11, y = percent_answers, fill = q11)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q11_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso proporciona um ambiente favorável ao crescimento intelectual dos\nmestrandos?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.8
#| fig-cap: "Avaliação discente da qualidade do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q12_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q12, incluindo níveis não utilizados
q12_summary <- dados_discentes %>%
  count(q12, sort = TRUE) %>%
  complete(q12 = q12_levels, fill = list(n = 0)) %>%
  mutate(q12 = factor(q12, levels = q12_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q12_summary_diverging <- q12_summary %>%
  mutate(percent_answers = if_else(
    q12 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q12_summary_diverging, aes(x = q12, y = percent_answers, fill = q12)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q12_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com a qualidade do curso?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.9
#| fig-cap: "Avaliação discente da qualificação dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q13_levels <- c(
  "Abaixo das minhas expectativas",
  "Um pouco abaixo das minhas expectativas",
  "De acordo com as minhas expectativas",
  "Um pouco acima das minhas expectativas",
  "Acima das minhas expectativas"
)

# Criar a tabela de frequência para a variável q13, incluindo níveis não utilizados
q13_summary <- dados_discentes %>%
  count(q13, sort = TRUE) %>%
  complete(q13 = q13_levels, fill = list(n = 0)) %>%
  mutate(q13 = factor(q13, levels = q13_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q13_summary_diverging <- q13_summary %>%
  mutate(percent_answers = if_else(
    q13 %in% c("Acima das minhas expectativas", "Um pouco acima das minhas expectativas"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q13_summary_diverging, aes(x = q13, y = percent_answers, fill = q13)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q13_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Abaixo das minhas expectativas" = "#EE6677",
      "Um pouco abaixo das minhas expectativas" = "#CCBB44",
      "De acordo com as minhas expectativas" = "grey80",
      "Um pouco acima das minhas expectativas" = "#66CCEE",
      "Acima das minhas expectativas" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia a qualificação dos docentes em relação às suas\nexpectativas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.10
#| fig-cap: "Avaliação discente da reputação do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q14_levels <- c(
  "Abaixo das minhas expectativas",
  "Um pouco abaixo das minhas expectativas",
  "De acordo com as minhas expectativas",
  "Um pouco acima das minhas expectativas",
  "Acima das minhas expectativas"
)

# Criar a tabela de frequência para a variável q14, incluindo níveis não utilizados
q14_summary <- dados_discentes %>%
  count(q14, sort = TRUE) %>%
  complete(q14 = q14_levels, fill = list(n = 0)) %>%
  mutate(q14 = factor(q14, levels = q14_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q14_summary_diverging <- q14_summary %>%
  mutate(percent_answers = if_else(
    q14 %in% c("Acima das minhas expectativas", "Um pouco acima das minhas expectativas"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q14_summary_diverging, aes(x = q14, y = percent_answers, fill = q14)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q14_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Abaixo das minhas expectativas" = "#EE6677",
      "Um pouco abaixo das minhas expectativas" = "#CCBB44",
      "De acordo com as minhas expectativas" = "grey80",
      "Um pouco acima das minhas expectativas" = "#66CCEE",
      "Acima das minhas expectativas" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia a reputação do curso no mercado/academia\nem relação às suas expectativas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.11
#| fig-cap: "Conhecimento dos objetivos do programa pelos discentes."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  count(q15) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q15, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q15)) +
  geom_rect(color = NA) + # Removida a cor da borda
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você conhece os objetivos do Programa?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.12
#| fig-cap: "Avaliação discente sobre o processo de distribuição de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  count(q16) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q16, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q16)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "O Programa tem clareza e transparência para \n distribuição das bolsas?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.13
#| fig-cap: "Avaliação discente dos critérios de manutenção de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  count(q17) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q17, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q17)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você considerea que os critérios de manutenção \n de bolsa durante o curso são claros?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



### Avaliação da Coordenação do Programa de Pós-Graduação

```{r}
#| label: fig-4.14
#| fig-cap: "Percepção discente sobre o compromisso da coordenação com a melhoria do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q19_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q19, incluindo níveis não utilizados
q19_summary <- dados_discentes %>%
  count(q19, sort = TRUE) %>%
  complete(q19 = q19_levels, fill = list(n = 0)) %>%
  mutate(q19 = factor(q19, levels = q19_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q19_summary_diverging <- q19_summary %>%
  mutate(percent_answers = if_else(
    q19 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q19_summary_diverging, aes(x = q19, y = percent_answers, fill = q19)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q19_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação demonstra compromisso com a melhoria do curso?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.15
#| fig-cap: "Avaliação discente da efetividade da coordenação no encaminhamento das solicitações ao colegiado."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q20_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q20, incluindo níveis não utilizados
q20_summary <- dados_discentes %>%
  count(q20, sort = TRUE) %>%
  complete(q20 = q20_levels, fill = list(n = 0)) %>%
  mutate(q20 = factor(q20, levels = q20_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q20_summary_diverging <- q20_summary %>%
  mutate(percent_answers = if_else(
    q20 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q20_summary_diverging, aes(x = q20, y = percent_answers, fill = q20)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q20_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação encaminha adequadamente as solicitações feitas ao\nColegiado?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.16
#| fig-cap: "Avaliação discente sobre a comunicação da coordenação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q21_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q21, incluindo níveis não utilizados
q21_summary <- dados_discentes %>%
  count(q21, sort = TRUE) %>%
  complete(q21 = q21_levels, fill = list(n = 0)) %>%
  mutate(q21 = factor(q21, levels = q21_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q21_summary_diverging <- q21_summary %>%
  mutate(percent_answers = if_else(
    q21 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q21_summary_diverging, aes(x = q21, y = percent_answers, fill = q21)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q21_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação envia avisos e comunicados de forma sistemática?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.17
#| fig-cap: "Avaliação discente sobre a disponibilidade da coordenação para o atendimento individual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q22_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q22, incluindo níveis não utilizados
q22_summary <- dados_discentes %>%
  count(q22, sort = TRUE) %>%
  complete(q22 = q22_levels, fill = list(n = 0)) %>%
  mutate(q22 = factor(q22, levels = q22_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q22_summary_diverging <- q22_summary %>%
  mutate(percent_answers = if_else(
    q22 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q22_summary_diverging, aes(x = q22, y = percent_answers, fill = q22)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q22_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação está disponível para atendimento individual aos discentes?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.18
#| fig-cap: "Percepção discente sobre o tratamento dado pela coordenação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q23_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q23, incluindo níveis não utilizados
q23_summary <- dados_discentes %>%
  count(q23, sort = TRUE) %>%
  complete(q23 = q23_levels, fill = list(n = 0)) %>%
  mutate(q23 = factor(q23, levels = q23_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q23_summary_diverging <- q23_summary %>%
  mutate(percent_answers = if_else(
    q23 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q23_summary_diverging, aes(x = q23, y = percent_answers, fill = q23)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q23_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação trata os discentes de forma respeitosa e igualitária?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.19
#| fig-cap: "Avaliação discente da consideracão de suas opiniões pela coordenação para a tomada de decisões."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q24_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q24, incluindo níveis não utilizados
q24_summary <- dados_discentes %>%
  count(q24, sort = TRUE) %>%
  complete(q24 = q24_levels, fill = list(n = 0)) %>%
  mutate(q24 = factor(q24, levels = q24_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q24_summary_diverging <- q24_summary %>%
  mutate(percent_answers = if_else(
    q24 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q24_summary_diverging, aes(x = q24, y = percent_answers, fill = q24)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q24_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação considera a opinião dos discentes nas decisões?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação da Infraestrutura

```{r}
#| label: fig-4.20
#| fig-cap: "Avaliação discente sobre as salas disponíveis aos grupos pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q26_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q26, incluindo níveis não utilizados
q26_summary <- dados_discentes %>%
  count(q26, sort = TRUE) %>%
  complete(q26 = q26_levels, fill = list(n = 0)) %>%
  mutate(q26 = factor(q26, levels = q26_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q26_summary_diverging <- q26_summary %>%
  mutate(percent_answers = if_else(
    q26 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q26_summary_diverging, aes(x = q26, y = percent_answers, fill = q26)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q26_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas dos grupos de pesquisa\n(recursos de informática, mesas, impressoras, etc.)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.21
#| fig-cap: "Avaliação discente das instalações sanitárias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q27_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q27, incluindo níveis não utilizados
q27_summary <- dados_discentes %>%
  count(q27, sort = TRUE) %>%
  complete(q27 = q27_levels, fill = list(n = 0)) %>%
  mutate(q27 = factor(q27, levels = q27_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q27_summary_diverging <- q27_summary %>%
  mutate(percent_answers = if_else(
    q27 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q27_summary_diverging, aes(x = q27, y = percent_answers, fill = q27)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q27_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as instalações sanitárias?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.22
#| fig-cap: "Avaliação discente dos recursos audiovisuais."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q28_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q28, incluindo níveis não utilizados
q28_summary <- dados_discentes %>%
  count(q28, sort = TRUE) %>%
  complete(q28 = q28_levels, fill = list(n = 0)) %>%
  mutate(q28 = factor(q28, levels = q28_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q28_summary_diverging <- q28_summary %>%
  mutate(percent_answers = if_else(
    q28 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q28_summary_diverging, aes(x = q28, y = percent_answers, fill = q28)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q28_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com os recursos audiovisuais?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.23
#| fig-cap: "Avaliação discente das salas de aula."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q29_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q29, incluindo níveis não utilizados
q29_summary <- dados_discentes %>%
  count(q29, sort = TRUE) %>%
  complete(q29 = q29_levels, fill = list(n = 0)) %>%
  mutate(q29 = factor(q29, levels = q29_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q29_summary_diverging <- q29_summary %>%
  mutate(percent_answers = if_else(
    q29 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q29_summary_diverging, aes(x = q29, y = percent_answers, fill = q29)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q29_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas de aula?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.24
#| fig-cap: "Avaliação discente do anfiteatro para eventos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q30_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q30, incluindo níveis não utilizados
q30_summary <- dados_discentes %>%
  count(q30, sort = TRUE) %>%
  complete(q30 = q30_levels, fill = list(n = 0)) %>%
  mutate(q30 = factor(q30, levels = q30_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q30_summary_diverging <- q30_summary %>%
  mutate(percent_answers = if_else(
    q30 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q30_summary_diverging, aes(x = q30, y = percent_answers, fill = q30)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q30_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com o anfiteatro para eventos?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.25
#| fig-cap: "Avaliação discente do espaço de convivência."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q30_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q30, incluindo níveis não utilizados
q30_summary <- dados_discentes %>%
  count(q30, sort = TRUE) %>%
  complete(q30 = q30_levels, fill = list(n = 0)) %>%
  mutate(q30 = factor(q30, levels = q30_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q30_summary_diverging <- q30_summary %>%
  mutate(percent_answers = if_else(
    q30 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q30_summary_diverging, aes(x = q30, y = percent_answers, fill = q30)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q30_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com o espaço de convivência?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação do Atendimento da Secretaria do Programa

```{r}
#| label: fig-4.26
#| fig-cap: "Percepção discente sobre o tratamento dado pela Secretaria do Progorama."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q33_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q33, incluindo níveis não utilizados
q33_summary <- dados_discentes %>%
  count(q33, sort = TRUE) %>%
  complete(q33 = q33_levels, fill = list(n = 0)) %>%
  mutate(q33 = factor(q33, levels = q33_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q33_summary_diverging <- q33_summary %>%
  mutate(percent_answers = if_else(
    q33 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q33_summary_diverging, aes(x = q33, y = percent_answers, fill = q33)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q33_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria trata os discentes de maneira respeitosa e igualitária?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.27
#| fig-cap: "Avaliação discente da agilidade da Secretaria para emitir documentos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q34_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q34, incluindo níveis não utilizados
q34_summary <- dados_discentes %>%
  count(q34, sort = TRUE) %>%
  complete(q34 = q34_levels, fill = list(n = 0)) %>%
  mutate(q34 = factor(q34, levels = q34_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q34_summary_diverging <- q34_summary %>%
  mutate(percent_answers = if_else(
    q34 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q34_summary_diverging, aes(x = q34, y = percent_answers, fill = q34)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q34_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria emite declarações/documentos em tempo hábil?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.28
#| fig-cap: "Avaliação discente do horário de funcionamento da Secretaria"
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q35_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q35, incluindo níveis não utilizados
q35_summary <- dados_discentes %>%
  count(q35, sort = TRUE) %>%
  complete(q35 = q35_levels, fill = list(n = 0)) %>%
  mutate(q35 = factor(q35, levels = q35_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q35_summary_diverging <- q35_summary %>%
  mutate(percent_answers = if_else(
    q35 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q35_summary_diverging, aes(x = q35, y = percent_answers, fill = q35)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q35_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O horário de funcionamento da Secretaria atende às minhas necessidades?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.29
#| fig-cap: "Avaliação discente da agilidade da Secretaria na resposta às demandas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q36_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q36, incluindo níveis não utilizados
q36_summary <- dados_discentes %>%
  count(q36, sort = TRUE) %>%
  complete(q36 = q36_levels, fill = list(n = 0)) %>%
  mutate(q36 = factor(q36, levels = q36_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q36_summary_diverging <- q36_summary %>%
  mutate(percent_answers = if_else(
    q36 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q36_summary_diverging, aes(x = q36, y = percent_answers, fill = q36)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q36_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria é ágil nas respostas às demandas encaminhadas pelos discentes?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação das Disciplinas Obrigatórias

```{r}
#| label: fig-4.30
#| fig-cap: "Avaliação discente da contribuição das disciplinas obrigatórias para seu desenvolvimento intelectual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q38_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q38
q38_summary <- dados_discentes %>%
  count(q38, sort = TRUE) %>%
  complete(q38 = q38_levels, fill = list(n = 0)) %>%
  mutate(q38 = factor(q38, levels = q38_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q38_summary_diverging <- q38_summary %>%
  mutate(percent_answers = if_else(
    q38 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q38_summary_diverging, aes(x = q38, y = percent_answers, fill = q38)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q38_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contribuem para o meu desenvolvimento intelectual?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.31
#| fig-cap: "Avaliação discente da contribuição das disciplinas obrigatórias para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q39_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q39
q39_summary <- dados_discentes %>%
  count(q39, sort = TRUE) %>%
  complete(q39 = q39_levels, fill = list(n = 0)) %>%
  mutate(q39 = factor(q39, levels = q39_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q39_summary_diverging <- q39_summary %>%
  mutate(percent_answers = if_else(
    q39 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q39_summary_diverging, aes(x = q39, y = percent_answers, fill = q39)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q39_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contribuem para apreensão de novos conhecimentos\ne desenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.32
#| fig-cap: "Avaliação discente da coerência das disciplinas obrigatórias com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q40_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q40
q40_summary <- dados_discentes %>%
  count(q40, sort = TRUE) %>%
  complete(q40 = q40_levels, fill = list(n = 0)) %>%
  mutate(q40 = factor(q40, levels = q40_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q40_summary_diverging <- q40_summary %>%
  mutate(percent_answers = if_else(
    q40 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q40_summary_diverging, aes(x = q40, y = percent_answers, fill = q40)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q40_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias são coerentes com as linhas de pesquisa do Programa?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.33
#| fig-cap: "Avaliação discente da atualidade da bibliografia das disciplinas obrigatórias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q41_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q41
q41_summary <- dados_discentes %>%
  count(q41, sort = TRUE) %>%
  complete(q41 = q41_levels, fill = list(n = 0)) %>%
  mutate(q41 = factor(q41, levels = q41_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q41_summary_diverging <- q41_summary %>%
  mutate(percent_answers = if_else(
    q41 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q41_summary_diverging, aes(x = q41, y = percent_answers, fill = q41)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q41_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contam com bibliografia atualizada?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.34
#| fig-cap: "Expectativas dos discentes em relação às disciplinas obrigatórias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q42_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q42
q42_summary <- dados_discentes %>%
  count(q42, sort = TRUE) %>%
  complete(q42 = q42_levels, fill = list(n = 0)) %>%
  mutate(q42 = factor(q42, levels = q42_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q42_summary_diverging <- q42_summary %>%
  mutate(percent_answers = if_else(
    q42 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q42_summary_diverging, aes(x = q42, y = percent_answers, fill = q42)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q42_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias correspondem às minhas expectativas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```




### Avaliação das Disciplinas Optativas

```{r}
#| label: fig-4.35
#| fig-cap: "Avaliação discente da contribuição das disciplinas optativas para seu desenvolvimento intelectual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q44_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q44
q44_summary <- dados_discentes %>%
  count(q44, sort = TRUE) %>%
  complete(q44 = q44_levels, fill = list(n = 0)) %>%
  mutate(q44 = factor(q44, levels = q44_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q44_summary_diverging <- q44_summary %>%
  mutate(percent_answers = if_else(
    q44 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q44_summary_diverging, aes(x = q44, y = percent_answers, fill = q44)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q44_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contribuem para o meu desenvolvimento intelectual?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.36
#| fig-cap: "Avaliação discente da contribuição das disciplinas optativas para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q45_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q45
q45_summary <- dados_discentes %>%
  count(q45, sort = TRUE) %>%
  complete(q45 = q45_levels, fill = list(n = 0)) %>%
  mutate(q45 = factor(q45, levels = q45_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q45_summary_diverging <- q45_summary %>%
  mutate(percent_answers = if_else(
    q45 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q45_summary_diverging, aes(x = q45, y = percent_answers, fill = q45)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q45_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contribuem para apreensão de novos conhecimentos\ne desenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.37
#| fig-cap: "Avaliação discente da coerência das disciplinas optativas com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q46_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q46
q46_summary <- dados_discentes %>%
  count(q46, sort = TRUE) %>%
  complete(q46 = q46_levels, fill = list(n = 0)) %>%
  mutate(q46 = factor(q46, levels = q46_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q46_summary_diverging <- q46_summary %>%
  mutate(percent_answers = if_else(
    q46 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q46_summary_diverging, aes(x = q46, y = percent_answers, fill = q46)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q46_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas são coerentes com as linhas de pesquisa do Programa?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.38
#| fig-cap: "Avaliação discente da atualidade da bibliografia das disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q47_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q47
q47_summary <- dados_discentes %>%
  count(q47, sort = TRUE) %>%
  complete(q47 = q47_levels, fill = list(n = 0)) %>%
  mutate(q47 = factor(q47, levels = q47_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q47_summary_diverging <- q47_summary %>%
  mutate(percent_answers = if_else(
    q47 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q47_summary_diverging, aes(x = q47, y = percent_answers, fill = q47)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q47_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contam com bibliografia atualizada?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.39
#| fig-cap: "Avaliação discente da diversidade dos temas abordados pelas disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q48_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q48
q48_summary <- dados_discentes %>%
  count(q48, sort = TRUE) %>%
  complete(q48 = q48_levels, fill = list(n = 0)) %>%
  mutate(q48 = factor(q48, levels = q48_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q48_summary_diverging <- q48_summary %>%
  mutate(percent_answers = if_else(
    q48 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q48_summary_diverging, aes(x = q48, y = percent_answers, fill = q48)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q48_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contemplam temas variados?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.40
#| fig-cap: "Avaliação discente das suas expectativas em relação às disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q49_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q49
q49_summary <- dados_discentes %>%
  count(q49, sort = TRUE) %>%
  complete(q49 = q49_levels, fill = list(n = 0)) %>%
  mutate(q49 = factor(q49, levels = q49_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q49_summary_diverging <- q49_summary %>%
  mutate(percent_answers = if_else(
    q49 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q49_summary_diverging, aes(x = q49, y = percent_answers, fill = q49)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q49_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas correspondem às minhas expectativas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Autoavaliação em Relação às Disciplinas

```{r}
#| label: fig-4.41
#| fig-cap: "Autoavaliação discente sobre o aprendizado do conteúdo das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q51_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q51, incluindo níveis não utilizados
q51_summary <- dados_discentes %>%
  count(q51, sort = TRUE) %>%
  complete(q51 = q51_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q51 = factor(q51, levels = q51_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q51_summary_diverging <- q51_summary %>%
  mutate(percent_answers = if_else(
    q51 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q51_summary_diverging, aes(x = q51, y = percent_answers, fill = q51)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q51_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Apreendi os conteúdos abordados nas disciplinas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.42
#| fig-cap: "Autoavaliação discente da leitura das bibliografias das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q52_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q52, incluindo níveis não utilizados
q52_summary <- dados_discentes %>%
  count(q52, sort = TRUE) %>%
  complete(q52 = q52_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q52 = factor(q52, levels = q52_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q52_summary_diverging <- q52_summary %>%
  mutate(percent_answers = if_else(
    q52 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q52_summary_diverging, aes(x = q52, y = percent_answers, fill = q52)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q52_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Realizei a leitura das bibliografias utilizadas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.43
#| fig-cap: "Autoavaliação discente da leitura das bibliografias das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q52_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q52, incluindo níveis não utilizados
q52_summary <- dados_discentes %>%
  count(q52, sort = TRUE) %>%
  complete(q52 = q52_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q52 = factor(q52, levels = q52_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q52_summary_diverging <- q52_summary %>%
  mutate(percent_answers = if_else(
    q52 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q52_summary_diverging, aes(x = q52, y = percent_answers, fill = q52)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q52_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Realizei a leitura das bibliografias utilizadas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.44
#| fig-cap: "Autoavaliação discente da frequência às aulas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q54_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q54, incluindo níveis não utilizados
q54_summary <- dados_discentes %>%
  count(q54, sort = TRUE) %>%
  complete(q54 = q54_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q54 = factor(q54, levels = q54_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q54_summary_diverging <- q54_summary %>%
  mutate(percent_answers = if_else(
    q54 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q54_summary_diverging, aes(x = q54, y = percent_answers, fill = q54)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q54_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Fui frequente às aulas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.45
#| fig-cap: "Autoavaliação discente da participação nas atividades e discussões dentro e fora da sala de aula."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q55_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q55, incluindo níveis não utilizados
q55_summary <- dados_discentes %>%
  count(q55, sort = TRUE) %>%
  complete(q55 = q55_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q55 = factor(q55, levels = q55_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q55_summary_diverging <- q55_summary %>%
  mutate(percent_answers = if_else(
    q55 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q55_summary_diverging, aes(x = q55, y = percent_answers, fill = q55)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q55_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Participei das atividades e discussões desenvolvidas em sala de aula e fora dela?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.46
#| fig-cap: "Autoavaliação discente da postura com os colegas e docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q55_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q55, incluindo níveis não utilizados
q55_summary <- dados_discentes %>%
  count(q55, sort = TRUE) %>%
  complete(q55 = q55_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q55 = factor(q55, levels = q55_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q55_summary_diverging <- q55_summary %>%
  mutate(percent_answers = if_else(
    q55 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q55_summary_diverging, aes(x = q55, y = percent_answers, fill = q55)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q55_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Fui respeitoso com o(a) professor(a) e com os colegas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação dos Docentes do Programa

```{r}
#| label: fig-4.47
#| fig-cap: "Avaliação discente da atualidade do conhecimento e domínido de conteúdo dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q57_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q57, incluindo níveis não utilizados
q57_summary <- dados_discentes %>%
  count(q57, sort = TRUE) %>%
  complete(q57 = q57_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q57 = factor(q57, levels = q57_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q57_summary_diverging <- q57_summary %>%
  mutate(percent_answers = if_else(
    q57 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q57_summary_diverging, aes(x = q57, y = percent_answers, fill = q57)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q57_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores demonstram conhecimento atualizado e domínio do conteúdo?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.48
#| fig-cap: "Avaliação discente da apresentação do plano de ensino pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q58_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q58, incluindo níveis não utilizados
q58_summary <- dados_discentes %>%
  count(q58, sort = TRUE) %>%
  complete(q58 = q58_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q58 = factor(q58, levels = q58_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q58_summary_diverging <- q58_summary %>%
  mutate(percent_answers = if_else(
    q58 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q58_summary_diverging, aes(x = q58, y = percent_answers, fill = q58)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q58_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores apresentaram o plano de ensino nos primeiros dias de aula?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.49
#| fig-cap: "Avaliação discente da atualidade e relevância do conteúdo das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q59_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q59, incluindo níveis não utilizados
q59_summary <- dados_discentes %>%
  count(q59, sort = TRUE) %>%
  complete(q59 = q59_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q59 = factor(q59, levels = q59_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q59_summary_diverging <- q59_summary %>%
  mutate(percent_answers = if_else(
    q59 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q59_summary_diverging, aes(x = q59, y = percent_answers, fill = q59)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q59_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O conteúdo das disciplinas é atual e relevante?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.50
#| fig-cap: "Avaliação discente do cumprimento dos planos de ensino pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q60_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q60, incluindo níveis não utilizados
q60_summary <- dados_discentes %>%
  count(q60, sort = TRUE) %>%
  complete(q60 = q60_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q60 = factor(q60, levels = q60_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q60_summary_diverging <- q60_summary %>%
  mutate(percent_answers = if_else(
    q60 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q60_summary_diverging, aes(x = q60, y = percent_answers, fill = q60)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q60_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores cumprem o plano de ensino?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.51
#| fig-cap: "Avaliação discente da exposição do conteúdo pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q61_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q61, incluindo níveis não utilizados
q61_summary <- dados_discentes %>%
  count(q61, sort = TRUE) %>%
  complete(q61 = q61_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q61 = factor(q61, levels = q61_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q61_summary_diverging <- q61_summary %>%
  mutate(percent_answers = if_else(
    q61 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q61_summary_diverging, aes(x = q61, y = percent_answers, fill = q61)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q61_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores expõem o conteúdo de maneira clara?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.52
#| fig-cap: "Avaliação discente da adequação das metodologias utilizadas pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q62_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q62, incluindo níveis não utilizados
q62_summary <- dados_discentes %>%
  count(q62, sort = TRUE) %>%
  complete(q62 = q62_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q62 = factor(q62, levels = q62_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q62_summary_diverging <- q62_summary %>%
  mutate(percent_answers = if_else(
    q62 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q62_summary_diverging, aes(x = q62, y = percent_answers, fill = q62)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q62_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores utilizam metodologias adequadas ao ensino da disciplina?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.53
#| fig-cap: "Percepção discente sobre a manutenção de um ambiente de respeito mútuo pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q63_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q63, incluindo níveis não utilizados
q63_summary <- dados_discentes %>%
  count(q63, sort = TRUE) %>%
  complete(q63 = q63_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q63 = factor(q63, levels = q63_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q63_summary_diverging <- q63_summary %>%
  mutate(percent_answers = if_else(
    q63 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q63_summary_diverging, aes(x = q63, y = percent_answers, fill = q63)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q63_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores se preocupam em manter um clima de respeito mútuo?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.54
#| fig-cap: "Avaliação discente da pontualidade dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q63_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q63, incluindo níveis não utilizados
q63_summary <- dados_discentes %>%
  count(q63, sort = TRUE) %>%
  complete(q63 = q63_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q63 = factor(q63, levels = q63_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q63_summary_diverging <- q63_summary %>%
  mutate(percent_answers = if_else(
    q63 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q63_summary_diverging, aes(x = q63, y = percent_answers, fill = q63)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q63_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores iniciam e terminam a aula no horário previsto?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.55
#| fig-cap: "Avaliação discente da adequação das respostas dos docentes aos questionamentos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q65_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q65, incluindo níveis não utilizados
q65_summary <- dados_discentes %>%
  count(q65, sort = TRUE) %>%
  complete(q65 = q65_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q65 = factor(q65, levels = q65_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q65_summary_diverging <- q65_summary %>%
  mutate(percent_answers = if_else(
    q65 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q65_summary_diverging, aes(x = q65, y = percent_answers, fill = q65)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q65_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores respondem adequadamente os questionamentos dos alunos?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.56
#| fig-cap: "Avaliação discente da acessibilidade e comunicação dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q66_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q66, incluindo níveis não utilizados
q66_summary <- dados_discentes %>%
  count(q66, sort = TRUE) %>%
  complete(q66 = q66_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q66 = factor(q66, levels = q66_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q66_summary_diverging <- q66_summary %>%
  mutate(percent_answers = if_else(
    q66 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q66_summary_diverging, aes(x = q66, y = percent_answers, fill = q66)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q66_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores são acessíveis e se comunicam bem com os alunos?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.57
#| fig-cap: "Percepção discente sobre a ética dos docentes com a turma."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q67_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q67, incluindo níveis não utilizados
q67_summary <- dados_discentes %>%
  count(q67, sort = TRUE) %>%
  complete(q67 = q67_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q67 = factor(q67, levels = q67_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q67_summary_diverging <- q67_summary %>%
  mutate(percent_answers = if_else(
    q67 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q67_summary_diverging, aes(x = q67, y = percent_answers, fill = q67)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q67_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores demonstram compromisso ético com a turma?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.58
#| fig-cap: "Avaliação discente das avaliações utilizada pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q68_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q68, incluindo níveis não utilizados
q68_summary <- dados_discentes %>%
  count(q68, sort = TRUE) %>%
  complete(q68 = q68_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q68 = factor(q68, levels = q68_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q68_summary_diverging <- q68_summary %>%
  mutate(percent_answers = if_else(
    q68 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q68_summary_diverging, aes(x = q68, y = percent_answers, fill = q68)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q68_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A forma como os professores avaliam (distribuem as notas) as disciplinas é\nclara e justa?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação da Orientação

```{r}
#| label: fig-4.59
#| fig-cap: "Percepção discente sobre o tratamento dos orientadores aos orientandos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q70_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q70, incluindo níveis não utilizados
q70_summary <- dados_discentes %>%
  count(q70, sort = TRUE) %>%
  complete(q70 = q70_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q70 = factor(q70, levels = q70_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q70_summary_diverging <- q70_summary %>%
  mutate(percent_answers = if_else(
    q70 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q70_summary_diverging, aes(x = q70, y = percent_answers, fill = q70)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q70_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Trata o(a) orientando(a) de forma respeitosa e igualitária?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.60
#| fig-cap: "Percepção discente sobre a condução do processo de elaboração da disssertação pelos orientadores."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q71_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q71, incluindo níveis não utilizados
q71_summary <- dados_discentes %>%
  count(q71, sort = TRUE) %>%
  complete(q71 = q71_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q71 = factor(q71, levels = q71_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q71_summary_diverging <- q71_summary %>%
  mutate(percent_answers = if_else(
    q71 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q71_summary_diverging, aes(x = q71, y = percent_answers, fill = q71)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q71_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Conduz o processo de construção da dissertação de maneira adequada?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.61
#| fig-cap: "Avaliação discente do comparecimento dos orientadores às reuniões de orientação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q72_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q72, incluindo níveis não utilizados
q72_summary <- dados_discentes %>%
  count(q72, sort = TRUE) %>%
  complete(q72 = q72_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q72 = factor(q72, levels = q72_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q72_summary_diverging <- q72_summary %>%
  mutate(percent_answers = if_else(
    q72 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q72_summary_diverging, aes(x = q72, y = percent_answers, fill = q72)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q72_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Comparece aos encontros de orientação?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.62
#| fig-cap: "Avaliação discente do retorno dos orientadores aos textos produzidos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q73_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q73, incluindo níveis não utilizados
q73_summary <- dados_discentes %>%
  count(q73, sort = TRUE) %>%
  complete(q73 = q73_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q73 = factor(q73, levels = q73_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q73_summary_diverging <- q73_summary %>%
  mutate(percent_answers = if_else(
    q73 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q73_summary_diverging, aes(x = q73, y = percent_answers, fill = q73)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q73_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Retorna os textos produzidos pelo(a) orientando(a)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.63
#| fig-cap: "Avaliação discente do incentivo dos orientadores à produção científica."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q74_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q74, incluindo níveis não utilizados
q74_summary <- dados_discentes %>%
  count(q74, sort = TRUE) %>%
  complete(q74 = q74_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q74 = factor(q74, levels = q74_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q74_summary_diverging <- q74_summary %>%
  mutate(percent_answers = if_else(
    q74 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q74_summary_diverging, aes(x = q74, y = percent_answers, fill = q74)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q74_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Incentiva a produção científica do(a) orientando(a)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.64
#| fig-cap: "Percepção discente sobre a abertura dos orientadores à exposição de novas ideias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q75_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q75, incluindo níveis não utilizados
q75_summary <- dados_discentes %>%
  count(q75, sort = TRUE) %>%
  complete(q75 = q75_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q75 = factor(q75, levels = q75_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q75_summary_diverging <- q75_summary %>%
  mutate(percent_answers = if_else(
    q75 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q75_summary_diverging, aes(x = q75, y = percent_answers, fill = q75)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q75_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "É aberto ao debate e à exposição de novas ideias?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Autoavaliação em Relação à Orientação

```{r}
#| label: fig-4.65
#| fig-cap: "Autoavaliação discente do tratamento aos orientadores."
#| fig-width: 7.5 
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q77_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente", 
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q77, incluindo níveis não utilizados
q77_summary <- dados_discentes %>%
  count(q77, sort = TRUE) %>%
  complete(q77 = q77_levels, fill = list(n = 0)) %>%
  mutate(q77 = factor(q77, levels = q77_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q77_summary_diverging <- q77_summary %>%
  mutate(percent_answers = if_else(
    q77 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q77_summary_diverging, aes(x = q77, y = percent_answers, fill = q77)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q77_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44", 
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(), 
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Sou respeitoso com o(a) orientador(a)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.66
#| fig-cap: "Autoavaliação discente da disponibilidade às solicitações dos orientadores."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q78_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q78, incluindo níveis não utilizados
q78_summary <- dados_discentes %>%
  count(q78, sort = TRUE) %>%
  complete(q78 = q78_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q78 = factor(q78, levels = q78_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q78_summary_diverging <- q78_summary %>%
  mutate(percent_answers = if_else(
    q78 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q78_summary_diverging, aes(x = q78, y = percent_answers, fill = q78)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q78_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Estou disponível quando meu(minha) orientador(a) solicita?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.67
#| fig-cap: "Autoavaliação discente da efetividade no atendimento ao acordado com os orientadores nas reuniões."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q79_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q79, incluindo níveis não utilizados
q79_summary <- dados_discentes %>%
  count(q79, sort = TRUE) %>%
  complete(q79 = q79_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q79 = factor(q79, levels = q79_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q79_summary_diverging <- q79_summary %>%
  mutate(percent_answers = if_else(
    q79 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q79_summary_diverging, aes(x = q79, y = percent_answers, fill = q79)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q79_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Desenvolvo o trabalho de acordo com o que foi discutido nos encontros de orientação?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.68
#| fig-cap: "Autoavaliação discente sobre o cumprimento dos prazos acordados com os orientadores."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q80_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q80, incluindo níveis não utilizados
q80_summary <- dados_discentes %>%
  count(q80, sort = TRUE) %>%
  complete(q80 = q80_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q80 = factor(q80, levels = q80_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q80_summary_diverging <- q80_summary %>%
  mutate(percent_answers = if_else(
    q80 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q80_summary_diverging, aes(x = q80, y = percent_answers, fill = q80)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q80_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Cumpro o prazo no envio dos textos ao(à) orientador(a)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.69
#| fig-cap: "Autoavaliação discente sobre a dedicaçõa exclusiva ao curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q81_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q81, incluindo níveis não utilizados
q81_summary <- dados_discentes %>%
  count(q81, sort = TRUE) %>%
  complete(q81 = q81_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q81 = factor(q81, levels = q81_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q81_summary_diverging <- q81_summary %>%
  mutate(percent_answers = if_else(
    q81 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q81_summary_diverging, aes(x = q81, y = percent_answers, fill = q81)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q81_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Tenho dedicação exclusiva ao curso?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.70
#| fig-cap: "Autoavaliação discente sobre a abertura ao debate de novas ideias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q82_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q82, incluindo níveis não utilizados
q82_summary <- dados_discentes %>%
  count(q82, sort = TRUE) %>%
  complete(q82 = q82_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q82 = factor(q82, levels = q82_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q82_summary_diverging <- q82_summary %>%
  mutate(percent_answers = if_else(
    q82 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q82_summary_diverging, aes(x = q82, y = percent_answers, fill = q82)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q82_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Estou aberto ao debate e à exposição de novas ideias?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Impacto da Pandemia da COVID-19

As respostas dos mestrandos sobre o impacto da pandemia da COVID-19 no 
curso foram divergentes:

- **Desafios com o formato online**: Um dos mestrandos destacou que a 
substituição das aulas presenciais por online prejudicou significativamente 
a interação entre professores e colegas, limitando debates e trocas de 
experiências. Além disso, o mestrando enfrentou desafios pessoais ao 
contrair COVID-19, o que afetou sua saúde e capacidade de acompanhar 
o curso.

- **Oportunidades e adaptação**: O outro mestrando viu a pandemia como 
uma oportunidade para desenvolver habilidades de estudo e comportamentais 
de maneira diferente, exigindo maior foco e disciplina para persistir no 
desenvolvimento das pesquisas e na assimilação dos conteúdos.

Essas respostas destacam a complexidade do impacto da pandemia no 
desempenho dos mestrandos. Enquanto alguns enfrentaram desafios 
significativos com o formato online, outros encontraram oportunidades 
para se adaptar e crescer. Isso sugere que o curso deve considerar 
estratégias para melhorar a interação online e apoiar os estudantes que 
preferem ambientes presenciais, ao mesmo tempo em que promove a autonomia 
e disciplina necessárias para o sucesso em formatos remotos.

Por fim, as respostas dos mestrandos sobre o impacto da pandemia da 
COVID-19 no curso destacaram a importância de flexibilidade e suporte aos 
estudantes em diferentes contextos. O curso deve continuar a avaliar e 
adaptar suas estratégias pedagógicas para atender às necessidades dos 
estudantes em ambientes presenciais e remotos.



### Sugestões de Melhorias

A política de autoavaliação do Programa de Pós-Graduação em Administração 
do IFMG - Campus Formiga, formalizada pela Portaria № 1706/IFMG, de 29 de 
novembro de 2024, destaca a importância da reflexão 
crítica e do aperfeiçoamento contínuo como fundamentais para garantir a 
qualidade e a relevância do programa [@portaria1706ifmg]. 

Nesse contexto, as sugestões dos discentes são essenciais para identificar 
áreas de melhoria e fortalecer o programa. As sugestões recebidas foram 
coletadas por meio de questões abertos e refletem as percepções dos 
mestrandos participantes da pesquisa sobre os aspectos que podem ser 
aprimorados.


::: {.callout-tip icon=false}
## **I. Sugestões de Melhorias Gerais**

- **Direcionamento de Disciplinas Optativas**: Sugere-se que as disciplinas 
optativas sejam alinhadas com os objetivos das dissertações dos mestrandos, 
garantindo uma integração mais eficaz entre os conteúdos acadêmicos e as 
pesquisas individuais.

- **Promoção da Internacionalização e Atividades Extracurriculares**: 
Recomenda-se expandir as oportunidades de internacionalização, extensões 
e atividades extracurriculares para enriquecer a experiência acadêmica 
dos alunos.

- **Aumento de Oportunidades de Bolsas de Estudos**: Propõe-se aumentar o 
número de bolsas de estudos disponíveis para apoiar financeiramente os 
alunos.

- **Desenvolvimento de Atividades Complementares**: Sugere-se a criação 
de mais atividades extracurriculares que complementem os conteúdos abordados 
no programa, promovendo uma aprendizagem mais integral.
:::


::: {.callout-tip icon=false}
## **II. Sugestões de Melhorias para a Coordenação**

- **Aperfeiçoamento da Publicidade das Decisões**: Recomenda-se ampliar a publicidade dss decisões do colegiado e da coordenação do mestrado para 
melhorar a comunicação com os mestrandos.

- **Integração com Alunos Especiais**: Sugere-se realizar uma breve 
apresentação do programa no início das disciplinas que contam com alunos 
especiais para facilitar a integração desses estudantes.

- **Comunicação sobre Processos de Bolsas**: Propõe-se aperfeiçoar a 
comunicação sobre o processo de bolsas, ampliando-se os prazos e 
divulgando os procedimentos com a maior antecedência possível.
:::


::: {.callout-tip icon=false}
## **III. Sugestões de Melhorias para a Infraestrutura**

- **Melhoria do Espaço de Convivência**: Sugere-se melhorar o espaço 
de convivência, tornando-o mais atraente e funcional para os alunos.

- **Recepção e Apresentação da Estrutura**: Sugere-se realizar,
na recepção dos mestrandos, uma apresentação detalhada da estrutura do IFMG - 
Campus Formiga, destacando os recursos disponíveis.
:::


::: {.callout-tip icon=false}
## **IV. Sugestões de Melhorias para as Disciplinas Obrigatórias**

- **Revisão e Atualização de Conteúdos**: Sugere-se revisar periodicamente 
os conteúdos das disciplinas, garantindo sua atualização contínua e 
relevância para o programa.
:::


::: {.callout-tip icon=false}
## **V. Sugestões de Melhorias para as Disciplinas Optativas**

- **Alinhamento com Objetivos de Pesquisa**: Sugere-se que as disciplinas 
optativas sejam direcionadas de acordo com os objetivos e temas das pesquisas 
dos alunos.

- **Oferta de Disciplinas Diferenciadas**: Sugere-se identificar 
regularmente novas necessidades e oferecer disciplinas optativas 
diferenciadas para atendê-las quando possível.
:::


::: {.callout-tip icon=false}
## **VI. Sugestões de Melhorias para os Orientadores**

- **Carga de Trabalho dos Orientadores**: Propõe-se avaliar a carga de 
trabalho dos orientadores para evitar sobrecarga e viabilizar condições 
de trabalho mais adequadas.

- **Ferramentas de Comunicação**: Sugere-se desenvolver ferramentas que 
melhorem a comunicação entre orientadores e orientados, potencializando o 
progresso das pesquisas.
:::





## Corpo Docente 


### Taxa de Resposta


```{r}
#| tbl-cap: "Taxa de Resposta Docente."

dados_taxa_docentes <- tibble(
  Categoria = "Docentes",
  Respondentes = 8,
  Total_Docentes = 10,
  Taxa_Resposta = 0.80
)

dados_taxa_docentes |>
  mutate(Taxa_Resposta = paste0(round(Taxa_Resposta * 100, 0), "\\%")) |>
  kbl(
    col.names = c(
      "\\textbf{Categoria}", 
      "\\textbf{Respondentes}", 
      "\\textbf{Total}", 
      "\\textbf{Taxa de Resposta}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'c', 'c', 'c')
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped"),
    stripe_color = "white!20"
  ) |>
  row_spec(1, background = "lightblue") |>
  footnote(
    general = "Fonte: Comissão Própria de Avaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```



### Avaliação do Programa

```{r}
#| label: fig-4.71
#| fig-cap: "Avaliação docente do Regimento do curso."
#| fig-width: 7.5 
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q3_levels <- c(
  "Ruim",
  "Insatisfatório", 
  "Regular",
  "Bom",
  "Excelente"
)

# Criar a tabela de frequência para a variável q3, incluindo níveis não utilizados
q3_summary <- dados_docentes %>%
  count(q3, sort = TRUE) %>%
  complete(q3 = q3_levels, fill = list(n = 0)) %>%
  mutate(q3 = factor(q3, levels = q3_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q3_summary_diverging <- q3_summary %>%
  mutate(percent_answers = if_else(
    q3 %in% c("Bom", "Excelente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q3_summary_diverging, aes(x = q3, y = percent_answers, fill = q3)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q3_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Ruim" = "#EE6677",
      "Insatisfatório" = "#CCBB44", 
      "Regular" = "grey80",
      "Bom" = "#66CCEE",
      "Excelente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(), 
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia o Regimento do PPGA?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.72
#| fig-cap: "Avaliação docente do processo de seleção do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q4_levels <- c(
  "Ruim",
  "Insatisfatório", 
  "Regular",
  "Bom",
  "Excelente"
)

# Criar a tabela de frequência para a variável q4, incluindo níveis não utilizados
q4_summary <- dados_docentes %>%
  count(q4, sort = TRUE) %>%
  complete(q4 = q4_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q4 = factor(q4, levels = q4_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q4_summary_diverging <- q4_summary %>%
  mutate(percent_answers = if_else(
    q4 %in% c("Bom", "Excelente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q4_summary_diverging, aes(x = q4, y = percent_answers, fill = q4)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q4_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Ruim" = "#EE6677",
      "Insatisfatório" = "#CCBB44", 
      "Regular" = "grey80",
      "Bom" = "#66CCEE",
      "Excelente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia o processo de seleção (divulgação, edital e realização)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.73
#| fig-cap: "Avaliação docente da interdisciplinaridade no Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q5_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q5, incluindo níveis não utilizados
q5_summary <- dados_docentes %>%
  count(q5, sort = TRUE) %>%
  complete(q5 = q5_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q5 = factor(q5, levels = q5_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q5_summary_diverging <- q5_summary %>%
  mutate(percent_answers = if_else(
    q5 %in% c("Concordo Parcialmente", "Concordo Totalmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q5_summary_diverging, aes(x = q5, y = percent_answers, fill = q5)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q5_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso utiliza ações de promoção da interdisciplinaridade?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.74
#| fig-cap: "Avaliação docente da internacionalização do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q6_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q6, incluindo níveis não utilizados
q6_summary <- dados_docentes %>%
  count(q6, sort = TRUE) %>%
  complete(q6 = q6_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q6 = factor(q6, levels = q6_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q6_summary_diverging <- q6_summary %>%
  mutate(percent_answers = if_else(
    q6 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q6_summary_diverging, aes(x = q6, y = percent_answers, fill = q6)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q6_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso emprega ações de promoção da internacionalização?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.75
#| fig-cap: "Avaliação docente das atividades de extensão."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q7_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q7, incluindo níveis não utilizados
q7_summary <- dados_docentes %>%
  count(q7, sort = TRUE) %>%
  complete(q7 = q7_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q7 = factor(q7, levels = q7_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q7_summary_diverging <- q7_summary %>%
  mutate(percent_answers = if_else(
    q7 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q7_summary_diverging, aes(x = q7, y = percent_answers, fill = q7)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q7_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades de extensão como cursos, projetos de extensão e\noutras ações e/ou integra-se à atividades extensionistas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.76
#| fig-cap: "Avaliação docente das atividades extraclasse."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q8_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q8, incluindo níveis não utilizados
q8_summary <- dados_docentes %>%
  count(q8, sort = TRUE) %>%
  complete(q8 = q8_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q8 = factor(q8, levels = q8_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q8_summary_diverging <- q8_summary %>%
  mutate(percent_answers = if_else(
    q8 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q8_summary_diverging, aes(x = q8, y = percent_answers, fill = q8)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q8_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades extraclasse como seminários, palestras,\ngrupos de estudos, dentre outros?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.77
#| fig-cap: "Percepção docente sobre o ambiente criado pelo curso para o crescimento intelectual dos discentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q9_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q9, incluindo níveis não utilizados
q9_summary <- dados_docentes %>%
  count(q9, sort = TRUE) %>%
  complete(q9 = q9_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q9 = factor(q9, levels = q9_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q9_summary_diverging <- q9_summary %>%
  mutate(percent_answers = if_else(
    q9 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q9_summary_diverging, aes(x = q9, y = percent_answers, fill = q9)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q9_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso proporciona um ambiente favorável ao crescimento intelectual dos\nmestrandos?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.78
#| fig-cap: "Avaliação docente da qualidade do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q10_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q10, incluindo níveis não utilizados
q10_summary <- dados_docentes %>%
  count(q10, sort = TRUE) %>%
  complete(q10 = q10_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q10 = factor(q10, levels = q10_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q10_summary_diverging <- q10_summary %>%
  mutate(percent_answers = if_else(
    q10 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q10_summary_diverging, aes(x = q10, y = percent_answers, fill = q10)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q10_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com a qualidade do curso?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.79
#| fig-cap: "Avaliação docente da reputação do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q11_levels <- c(
  "Abaixo das minhas expectativas",
  "Um pouco abaixo das minhas expectativas",
  "De acordo com as minhas expectativas",
  "Um pouco acima das minhas expectativas",
  "Acima das minhas expectativas"
)

# Criar a tabela de frequência para a variável q11, incluindo níveis não utilizados
q11_summary <- dados_docentes %>%
  count(q11, sort = TRUE) %>%
  complete(q11 = q11_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q11 = factor(q11, levels = q11_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q11_summary_diverging <- q11_summary %>%
  mutate(percent_answers = if_else(
    q11 %in% c("Acima das minhas expectativas", "Um pouco acima das minhas expectativas"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q11_summary_diverging, aes(x = q11, y = percent_answers, fill = q11)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q11_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Abaixo das minhas expectativas" = "#EE6677",
      "Um pouco abaixo das minhas expectativas" = "#CCBB44",
      "De acordo com as minhas expectativas" = "grey80",
      "Um pouco acima das minhas expectativas" = "#66CCEE",
      "Acima das minhas expectativas" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia a reputação do curso no mercado/academia em\nrelação às suas expectativas?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.80
#| fig-cap: "Conhecimento dos docentes sobre os objetivos do programa."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q12) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q12, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q12)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você conhece os objetivos do Programa?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



### Avaliação do Incetivo à Pesquisa


```{r}
#| label: fig-4.81
#| fig-cap: "Avaliação docente da distribuição de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q14) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q14, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q14)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "O Programa tem clareza e transparência para distribuição \n das bolsas?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.82
#| fig-cap: "Avaliação docente dos critérios de manutenção de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q15) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q15, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q15)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você acha que os critérios de manutenção \n de bolsa durante o curso são claros?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.83
#| fig-cap: "Avaliação docente do estímulo à participação em reuniões e eventos científicos."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q16) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q16, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q16)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "O Programa estimula a participação em reuniões de \n pesquisa, congressos, workshop, etc.?",
    caption = "Fonte: Comissão Própria de Avaliação"
  ) +
  theme(
    plot.title = element_text(size = 10, face = "bold", hjust = 1),
    plot.caption = element_text(size = 8)
  )
```



### Avaliação da Coordenação do Programa

```{r}
#| label: fig-4.84
#| fig-cap: "Percepção docente sobre o compromisso da coordenação com a melhoria do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q18_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q18, incluindo níveis não utilizados
q18_summary <- dados_docentes %>%
  count(q18, sort = TRUE) %>%
  complete(q18 = q18_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q18 = factor(q18, levels = q18_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q18_summary_diverging <- q18_summary %>%
  mutate(percent_answers = if_else(
    q18 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q18_summary_diverging, aes(x = q18, y = percent_answers, fill = q18)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q18_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação demonstra compromisso com a melhoria do curso?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.85
#| fig-cap: "Avaliação docente da efetividade da coordenação no encaminhamento das solicitações ao colegiado."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q19_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q19, incluindo níveis não utilizados
q19_summary <- dados_docentes %>%
  count(q19, sort = TRUE) %>%
  complete(q19 = q19_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q19 = factor(q19, levels = q19_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q19_summary_diverging <- q19_summary %>%
  mutate(percent_answers = if_else(
    q19 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q19_summary_diverging, aes(x = q19, y = percent_answers, fill = q19)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q19_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação encaminha adequadamente as solicitações feitas ao Colegiado?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.86
#| fig-cap: "Avaliação doccente da comunicação da coordenação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q20_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q20, incluindo níveis não utilizados
q20_summary <- dados_docentes %>%
  count(q20, sort = TRUE) %>%
  complete(q20 = q20_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q20 = factor(q20, levels = q20_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q20_summary_diverging <- q20_summary %>%
  mutate(percent_answers = if_else(
    q20 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q20_summary_diverging, aes(x = q20, y = percent_answers, fill = q20)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q20_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação envia avisos e comunicados de forma sistemática?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.87
#| fig-cap: "Percepção docente sobre a consideracão de suas opiniões pela coordenação para a tomada de decisões."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q21_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q21, incluindo níveis não utilizados
q21_summary <- dados_docentes %>%
  count(q21, sort = TRUE) %>%
  complete(q21 = q21_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q21 = factor(q21, levels = q21_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q21_summary_diverging <- q21_summary %>%
  mutate(percent_answers = if_else(
    q21 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q21_summary_diverging, aes(x = q21, y = percent_answers, fill = q21)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q21_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação considera a opinião dos docentes nas decisões?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação da Infraestrutura

```{r}
#| label: fig-4.88
#| fig-cap: "Avaliação docente das salas disponíveis aos grupos pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q23_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q23, incluindo níveis não utilizados
q23_summary <- dados_docentes %>%
  count(q23, sort = TRUE) %>%
  complete(q23 = q23_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q23 = factor(q23, levels = q23_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q23_summary_diverging <- q23_summary %>%
  mutate(percent_answers = if_else(
    q23 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q23_summary_diverging, aes(x = q23, y = percent_answers, fill = q23)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q23_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas dos grupo de pesquisa \n(recursos de informática, mesas, impressoras, etc.)?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.89
#| fig-cap: "Avaliação docente dos recursos audiovisuais."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q24_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q24, incluindo níveis não utilizados
q24_summary <- dados_docentes %>%
  count(q24, sort = TRUE) %>%
  complete(q24 = q24_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q24 = factor(q24, levels = q24_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q24_summary_diverging <- q24_summary %>%
  mutate(percent_answers = if_else(
    q24 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q24_summary_diverging, aes(x = q24, y = percent_answers, fill = q24)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q24_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com os recursos audiovisuais?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.90
#| fig-cap: "Avaliação docente das salas de aula."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q25_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q25, incluindo níveis não utilizados
q25_summary <- dados_docentes %>%
  count(q25, sort = TRUE) %>%
  complete(q25 = q25_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q25 = factor(q25, levels = q25_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q25_summary_diverging <- q25_summary %>%
  mutate(percent_answers = if_else(
    q25 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q25_summary_diverging, aes(x = q25, y = percent_answers, fill = q25)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q25_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas de aula?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.91
#| fig-cap: "Avaliação docente do anfiteatro para eventos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q26_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q26, incluindo níveis não utilizados
q26_summary <- dados_docentes %>%
  count(q26, sort = TRUE) %>%
  complete(q26 = q26_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q26 = factor(q26, levels = q26_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q26_summary_diverging <- q26_summary %>%
  mutate(percent_answers = if_else(
    q26 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q26_summary_diverging, aes(x = q26, y = percent_answers, fill = q26)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q26_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com o anfiteatro para eventos?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação do Atendimento da Secretaria

```{r}
#| label: fig-4.92
#| fig-cap: "Avaliação docente do tratamento dado pela Secretaria do Progorama."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q33_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q33, incluindo níveis não utilizados
q33_summary <- dados_docentes %>%
  count(q33, sort = TRUE) %>%
  complete(q33 = q33_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q33 = factor(q33, levels = q33_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q33_summary_diverging <- q33_summary %>%
  mutate(percent_answers = if_else(
    q33 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q33_summary_diverging, aes(x = q33, y = percent_answers, fill = q33)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q33_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria trata os discentes de maneira respeitosa e igualitária?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.93
#| fig-cap: "Avaliação docente da agilidade da Secretaria para emitir documentos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q29_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q29, incluindo níveis não utilizados
q29_summary <- dados_docentes %>%
  count(q29, sort = TRUE) %>%
  complete(q29 = q29_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q29 = factor(q29, levels = q29_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q29_summary_diverging <- q29_summary %>%
  mutate(percent_answers = if_else(
    q29 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q29_summary_diverging, aes(x = q29, y = percent_answers, fill = q29)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q29_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria emite declarações/documentos em tempo hábil?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.94
#| fig-cap: "Avaliação docente do horário de funcionamento da Secretaria do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q30_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q30, incluindo níveis não utilizados
q30_summary <- dados_docentes %>%
  count(q30, sort = TRUE) %>%
  complete(q30 = q30_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q30 = factor(q30, levels = q30_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q30_summary_diverging <- q30_summary %>%
  mutate(percent_answers = if_else(
    q30 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q30_summary_diverging, aes(x = q30, y = percent_answers, fill = q30)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q30_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O horário de funcionamento da Secretaria atende às minhas necessidades?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.95
#| fig-cap: "Avaliação docente da agilidade da Secretaria na resposta às demandas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q31_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q31, incluindo níveis não utilizados
q31_summary <- dados_docentes %>%
  count(q31, sort = TRUE) %>%
  complete(q31 = q31_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q31 = factor(q31, levels = q31_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q31_summary_diverging <- q31_summary %>%
  mutate(percent_answers = if_else(
    q31 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q31_summary_diverging, aes(x = q31, y = percent_answers, fill = q31)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q31_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria é ágil nas respostas às demandas encaminhadas pelos discentes?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Avaliação das Disciplinas Obrigatórias


```{r}
#| label: fig-4.96
#| fig-cap: "Avaliação docente da contribuição das disciplinas obrigatórias para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades dos discentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q33_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q33, incluindo níveis não utilizados
q33_summary <- dados_docentes %>%
  count(q33, sort = TRUE) %>%
  complete(q33 = q33_levels, fill = list(n = 0)) %>%
  mutate(q33 = factor(q33, levels = q33_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q33_summary_diverging <- q33_summary %>%
  mutate(percent_answers = if_else(
    q33 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q33_summary_diverging, aes(x = q33, y = percent_answers, fill = q33)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q33_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contribuem para apreensão de novos conhecimentos e\ndesenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.97
#| fig-cap: "Avaliação docente da compatibilidade dos créditos exigidos em disciplinas obrigatórias com o objetivo do programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q34_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q34, incluindo níveis não utilizados
q34_summary <- dados_docentes %>%
  count(q34, sort = TRUE) %>%
  complete(q34 = q34_levels, fill = list(n = 0)) %>%
  mutate(q34 = factor(q34, levels = q34_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q34_summary_diverging <- q34_summary %>%
  mutate(percent_answers = if_else(
    q34 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q34_summary_diverging, aes(x = q34, y = percent_answers, fill = q34)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q34_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os créditos exigidos em disciplinas obrigatórias são compatíveis com o\nobjetivo do programa?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```




```{r}
#| label: fig-4.98
#| fig-cap: "Avaliação docente da coerência das disciplinas obrigatórias com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q35_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q35, incluindo níveis não utilizados
q35_summary <- dados_docentes %>%
  count(q35, sort = TRUE) %>%
  complete(q35 = q35_levels, fill = list(n = 0)) %>%
  mutate(q35 = factor(q35, levels = q35_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q35_summary_diverging <- q35_summary %>%
  mutate(percent_answers = if_else(
    q35 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q35_summary_diverging, aes(x = q35, y = percent_answers, fill = q35)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q35_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias são coerentes com as linhas de pesquisa do\nPrograma?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.99
#| fig-cap: "Avaliação docente da aplicabilidade das disciplinas obrigatórias para a pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q36_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q36, incluindo níveis não utilizados
q36_summary <- dados_docentes %>%
  count(q36, sort = TRUE) %>%
  complete(q36 = q36_levels, fill = list(n = 0)) %>%
  mutate(q36 = factor(q36, levels = q36_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q36_summary_diverging <- q36_summary %>%
  mutate(percent_answers = if_else(
    q36 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q36_summary_diverging, aes(x = q36, y = percent_answers, fill = q36)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q36_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias possuem aplicabilidade para a pesquisa?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.100
#| fig-cap: "Avaliação docente da atualidade da bibliografia das disciplinas obrigatórias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q37_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q37, incluindo níveis não utilizados
q37_summary <- dados_docentes %>%
  count(q37, sort = TRUE) %>%
  complete(q37 = q37_levels, fill = list(n = 0)) %>%
  mutate(q37 = factor(q37, levels = q37_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q37_summary_diverging <- q37_summary %>%
  mutate(percent_answers = if_else(
    q37 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q37_summary_diverging, aes(x = q37, y = percent_answers, fill = q37)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q37_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contam com bibliografia atualizada?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```





### Avaliação das Disciplinas Optativas


```{r}
#| label: fig-4.101
#| fig-cap: "Avaliação docente da contribuição das disciplinas optativas para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades dos discentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q39_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q39, incluindo níveis não utilizados
q39_summary <- dados_docentes %>%
  count(q39, sort = TRUE) %>%
  complete(q39 = q39_levels, fill = list(n = 0)) %>%
  mutate(q39 = factor(q39, levels = q39_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q39_summary_diverging <- q39_summary %>%
  mutate(percent_answers = if_else(
    q39 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q39_summary_diverging, aes(x = q39, y = percent_answers, fill = q39)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q39_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contribuem para apreensão de novos conhecimentos e\ndesenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.102
#| fig-cap: "Avaliação docente da compatibilidade dos créditos exigidos em disciplinas optativas com o objetivo do programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q40_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q40, incluindo níveis não utilizados
q40_summary <- dados_docentes %>%
  count(q40, sort = TRUE) %>%
  complete(q40 = q40_levels, fill = list(n = 0)) %>%
  mutate(q40 = factor(q40, levels = q40_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q40_summary_diverging <- q40_summary %>%
  mutate(percent_answers = if_else(
    q40 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q40_summary_diverging, aes(x = q40, y = percent_answers, fill = q40)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q40_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os créditos exigidos em disciplinas optativas são compatíveis com o objetivo do\nprograma?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.103
#| fig-cap: "Avaliação docente da coerência das disciplinas optativas com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q41_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q41, incluindo níveis não utilizados
q41_summary <- dados_docentes %>%
  count(q41, sort = TRUE) %>%
  complete(q41 = q41_levels, fill = list(n = 0)) %>%
  mutate(q41 = factor(q41, levels = q41_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q41_summary_diverging <- q41_summary %>%
  mutate(percent_answers = if_else(
    q41 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q41_summary_diverging, aes(x = q41, y = percent_answers, fill = q41)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q41_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas são coerentes com as linhas de pesquisa do\nPrograma?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-104
#| fig-cap: "Avaliação docente da aplicabilidade das disciplinas optativas para a pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q42_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q42, incluindo níveis não utilizados
q42_summary <- dados_docentes %>%
  count(q42, sort = TRUE) %>%
  complete(q42 = q42_levels, fill = list(n = 0)) %>%
  mutate(q42 = factor(q42, levels = q42_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q42_summary_diverging <- q42_summary %>%
  mutate(percent_answers = if_else(
    q42 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q42_summary_diverging, aes(x = q42, y = percent_answers, fill = q42)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q42_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas possuem aplicabilidade para a pesquisa?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.105
#| fig-cap: "Avaliação docente da atualidade da bibliografia das disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q43_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q43, incluindo níveis não utilizados
q43_summary <- dados_docentes %>%
  count(q43, sort = TRUE) %>%
  complete(q43 = q43_levels, fill = list(n = 0)) %>%
  mutate(q43 = factor(q43, levels = q43_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q43_summary_diverging <- q43_summary %>%
  mutate(percent_answers = if_else(
    q43 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q43_summary_diverging, aes(x = q43, y = percent_answers, fill = q43)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q43_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contam com bibliografia atualizada?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-d106
#| fig-cap: "Avaliação docente da diversidade de temas contemplados pelas disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q44_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q44, incluindo níveis não utilizados
q44_summary <- dados_docentes %>%
  count(q44, sort = TRUE) %>%
  complete(q44 = q44_levels, fill = list(n = 0)) %>%
  mutate(q44 = factor(q44, levels = q44_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q44_summary_diverging <- q44_summary %>%
  mutate(percent_answers = if_else(
    q44 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q44_summary_diverging, aes(x = q44, y = percent_answers, fill = q44)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q44_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 10, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 9, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contemplam temas variados?",
    caption = "Fonte: Comissão Própria de Avaliação",
    x = NULL,
    fill = NULL
  )
```



### Impacto da Pandemia da COVID-19

Os docentes do curso responderam à pergunta sobre como a pandemia alterou 
a dinâmica e o processo de ensino-aprendizagem no Mestrado da 
seguinte forma:

- **Minimização do impacto**: Alguns docentes destacaram que o impacto 
negativo foi minimizado com a adoção de disciplinas remotas ministradas 
de forma híbrida. Outros mencionaram que a possibilidade de frequentar 
as disciplinas de forma remota aumentou a participação de estudantes de 
municípios distantes.

- **Desafios com aulas remotas**: Outros docentes expressaram preocupações 
sobre a eficácia das aulas remotas, considerando que elas 
proporcionaramm um rendimento inferior ao das aulas presenciais. Além disso, 
alguns mencionaram dificuldades no início do curso e um desinteresse 
generalizado pela pós-graduação.

- **Adaptação e esforço conjunto**: Alguns docentes destacaram a adaptação 
imediata ao ambiente virtual e o esforço conjunto de estudantes, docentes 
e servidores para minimizar os impactos da pandemia na qualidade do ensino 
e aprendizagem.

- **Mudanças permanentes**: Um dos docentes mencionou que o processo de 
ensino-aprendizagem mudou permanentemente devido ao uso de tecnologias e 
ao perfil dos alunos.

- **Preparação inadequada**: Outro docente destacou que nem os mestrandos 
nem os docentes estavam preparados para iniciar um curso de mestrado nas 
condições impostas pela pandemia.

As respostas dos docentes revelaram uma variedade de percepções sobre o 
impacto da pandemia no curso. Enquanto alguns viram oportunidades para 
aumentar a acessibilidade, outros enfrentaram desafios significativos 
com o formato remoto. Isso sugere que o curso deve investir em estratégias 
para apoiar os docentes na adaptação às novas tecnologias e metodologias.

Em resumo, as respostas dos docentes sobre o impacto da pandemia 
no curso destacam a importância de flexibilidade, adaptação e suporte 
tanto para os estudantes quanto para os docentes. O curso deve continuar 
a avaliar e adaptar suas estratégias pedagógicas para atender às 
necessidades de todos os envolvidos em ambientes presenciais ou remotos.


### Sugestões de Melhorias

A política de autoavaliação do Programa de Pós-Graduação em Administração 
do IFMG - Campus Formiga enfatiza a importância da participação ativa dos 
docentes no processo de reflexão crítica e aperfeiçoamento contínuo. 

As sugestões apresentadas pelos docentes, que atuam diretamente no 
desenvolvimento do programa, oferecem uma perspectiva valiosa sobre 
as áreas que necessitam de ajustes e melhorias. Essas contribuições 
devem ser utilizadas como fundamento para alinhar o programa com as 
necessidades acadêmicas e profissionais emergentes, sob a perspectiva 
do corpo docente do programa.


::: {.callout-tip icon=false}
## **I. Sugestões de Melhorias Gerais para o Programa**

- **Revisão e Atualização do Currículo**: Sugere-se reavaliar a sequência 
das disciplinas e o rol de disciplinas optativas para garantir uma formação 
mais coerente e atualizada.

- **Plano Estratégico para o Doutorado**: Propõe-se desenvolver 
um plano estratégico para futura aprovação de um programa de doutorado, 
ajustando o currículo e o processo seletivo conforme necessário.

- **Atividades de Extensão e Extraclasse**: Sugere-se ampliar a oferta 
de atividades de extensão, como cursos, projetos e seminários, além de 
minicursos e palestras para enriquecer a experiência acadêmica.
:::


::: {.callout-tip icon=false}
## **II. Sugestões de Melhorias para Incentivos à Pesquisa**

- **Captação de Recursos para Bolsas**: Recomenda-se buscar captação de 
recursos para oferecer mais bolsas de estudos.

- **Incentivo à Publicação em Periódicos de Impacto**: Propõe-se criar 
melhores condições e incentivar o aumento da publicação em periódicos de 
de alto impacto.
:::


::: {.callout-tip icon=false}
## **III. Sugestões de Melhorias para a Coordenação**

- **Participação e Envolvimento dos Docentes**: Sugere-se a adoção de 
medidas ou incentivos para um maior engajamento do corpo docente 
na construção e evolução do curso.

- **Parcerias com Empresas da Região**: Recomenda-se ampliar a 
prospecção e a interação com empresas da região para fortalecer e criar 
novas parcerias e oportunidades para a pesquisa.
:::


::: {.callout-tip icon=false}
## **IV. Sugestões de Melhorias para a Infraestrutura**

- **Ambientes para Aulas Híbridas**: Propõe-se aperfeiçoar os ambientes 
para aulas remotas ou híbridas.

- **Anfiteatro para Eventos**: Sugere-se a construção de um anfiteatro 
maiorpara eventos acadêmicos, melhorando a capacidade de realização de 
seminários e congressos.

- **Acesso a Recursos Computacionais e Literatura**: Recomenda-se ampliar 
o acesso a recursos computacionais, softwares e literatura especializada 
para apoiar as atividades de pesquisa.
:::


::: {.callout-tip icon=false}
## **V. Sugestões de Melhorias para as Disciplinas Obrigatórias**

- **Reavaliação das Disciplinas Obrigatórias**: Sugere-se reavaliar as 
disciplinas obrigatórias para garantir consistência com as linhas de pesquisa 
e a formação pretendida.

- **Inclusão de Métodos Específicos de Pesquisa**: Propõe-se incluir 
disciplinas que abordem métodos específicos de pesquisa quantitativa, 
alinhando-se com as necessidades dos alunos durante o desenvolvimento de 
seus projetos.
:::


::: {.callout-tip icon=false}
## **VI. Sugestões de Melhorias para as Disciplinas Optativas**

- **Revisão e Expansão das Disciplinas Optativas**: Recomenda-se reavaliar 
as disciplinas optativas para alinhar-se com as tendências de
pesquisa dos professores e alunos.
:::




# Ações Demandadas a Partir da Autoavaliação



::: {.landscape}

```{r}
#| tbl-cap: "Ações Demandadas a Partir da Autoavaliação."

tabela_acoes_demandadas <- data.frame(
  Demanda = c(
    "Reavaliar a sequência das disciplinas obrigatórias e optativas, visando maior alinhamento às linhas de pesquisa do mestrado.",
    "Desenvolver um plano estratégico para futura aprovação de um programa de doutorado, ajustando o currículo e o processo seletivo conforme necessário.",
    "Ampliar a oferta de atividades de extensão, como cursos, projetos e seminários, além de minicursos e palestras para enriquecer a experiência acadêmica.",
    "Buscar captação de recursos para oferecer mais bolsas de estudos.",
    "Criar melhores condições e incentivar o aumento da publicação em periódicos de alto impacto.",
    "Adotar medidas ou incentivos para um maior engajamento do corpo docente na construção e evolução do curso.",
    "Ampliar a prospecção e a interação com empresas da região para fortalecer e criar novas parcerias e oportunidades para a pesquisa.",
    "Aperfeiçoar os ambientes para aulas remotas ou híbridas.",
    "Construir um anfiteatro maior para eventos acadêmicos, melhorando a capacidade de realização de seminários e congressos.",
    "Ampliar o acesso a recursos computacionais, softwares e literatura especializada para apoiar as atividades de pesquisa.",
    "Reavaliar as disciplinas obrigatórias para garantir consistência com as linhas de pesquisa e a formação pretendida.",
    "Incluir disciplinas que abordem métodos específicos de pesquisa quantitativa, alinhando-se com as necessidades dos alunos durante o desenvolvimento de seus projetos.",
    "Reavaliar as disciplinas optativas para alinhar-se com as tendências de pesquisa dos professores e alunos.",
    "Alinhar as disciplinas optativas com os objetivos das dissertações dos mestrandos, garantindo uma integração mais eficaz entre os conteúdos acadêmicos e as pesquisas individuais.",
    "Expandir as oportunidades de internacionalização, extensões e atividades extracurriculares para enriquecer a experiência acadêmica dos alunos.",
    "Aumentar o número de bolsas de estudos disponíveis para apoiar financeiramente os alunos.",
    "Criar mais atividades extracurriculares que complementem os conteúdos abordados no programa, promovendo uma aprendizagem mais integral.",
    "Ampliar a publicidade das decisões do colegiado e da coordenação do mestrado para melhorar a comunicação com os mestrandos.",
    "Realizar uma breve apresentação do programa no início das disciplinas que contam com alunos especiais para facilitar a integração desses estudantes.",
    "Aperfeiçoar a comunicação sobre o processo de bolsas, ampliando-se os prazos e divulgando os procedimentos com a maior antecedência possível.",
    "Melhorar o espaço de convivência, tornando-o mais atraente e funcional para os alunos.",
    "Realizar, na recepção dos mestrandos, uma apresentação detalhada da estrutura do IFMG - Campus Formiga, destacando os recursos disponíveis.",
    "Revisar periodicamente os conteúdos das disciplinas, garantindo sua atualização contínua e relevância para o programa.",
    "Avaliar a carga de trabalho dos orientadores para evitar sobrecarga e viabilizar condições de trabalho mais adequadas.",
    "Desenvolver ferramentas que melhorem a comunicação entre orientadores e orientados, potencializando o progresso das pesquisas."
  ),
  Representacao = c(
    "Colegiado do curso",
    "Colegiado do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Colegiado do curso",
    "Colegiado do curso",
    "Colegiado do curso",
    "Colegiado do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Colegiado do curso",
    "Coordenação do curso",
    "Coordenação do curso"
  ),
  Dimensao = c(
    "Matriz curricular do Programa",
    "Planejamento estratégico do Programa",
    "Atividades de extensão e extraclasse",
    "Incentivos à pesquisa",
    "Incentivos à pesquisa",
    "Coordenação do Programa",
    "Coordenação do Programa",
    "Infraestrutura",
    "Infraestrutura",
    "Infraestrutura",
    "Matriz curricular do Programa",
    "Matriz curricular do Programa",
    "Matriz curricular do Programa",
    "Matriz curricular do Programa",
    "Atividades de extensão e extraclasse",
    "Incentivos à pesquisa",
    "Atividades de extensão e extraclasse",
    "Coordenação do Programa",
    "Coordenação do Programa",
    "Coordenação do Programa",
    "Infraestrutura",
    "Infraestrutura",
    "Matriz curricular do Programa",
    "Coordenação do Programa",
    "Coordenação do Programa"
  )
)


tabela_acoes_demandadas |>
  kbl(
    col.names = c(
      "\\textbf{Demanda}",
      "\\textbf{Representação}",
      "\\textbf{Dimensão}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('l', 'c', 'l'),
    longtable = TRUE
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped", "repeat_header"),
    stripe_color = "gray!10",
    font_size = 9.5
  ) |>
  column_spec(1, width = "12cm") |>
  column_spec(2, width = "4.5cm") |>
  column_spec(3, width = "6cm") |>
  footnote(
    general = "Fonte: Comissão Própria de Avaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```
:::




# Meta-Avaliação





# Considerações Finais




# Referências {.unnumbered}

::: {#refs}
:::




